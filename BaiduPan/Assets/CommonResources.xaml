<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mui="http://firstfloorsoftware.com/ModernUI"
                    xmlns:converters="clr-namespace:BaiduPan.Converters">

    
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converters:LongToDataSizeConverter x:Key="LongToDataSizeConverter"/>
    <converters:UriToImageSourceConverter x:Key="UriToImageSourceConverter"/>
    <SolidColorBrush x:Key="AccentColorBrush" Color="{DynamicResource AccentColor}"/>

    <Style x:Key="SelectedBackgroundStyle" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Opacity="0.2" Color="{DynamicResource AccentColor}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Opacity="0.1" Color="{DynamicResource AccentColor}"/>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FileImageSelectorStyle" TargetType="Image">
        <Style.Triggers>
            <DataTrigger Binding="{Binding FileType}" Value="ApkType">
                <Setter Property="Source" Value="Images/FileTypes/ApkType.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FileType}" Value="DocType">
                <Setter Property="Source" Value="Images/FileTypes/DocType.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FileType}" Value="ExeType">
                <Setter Property="Source" Value="Images/FileTypes/ExeType.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FileType}" Value="FolderType">
                <Setter Property="Source" Value="Images/FileTypes/FolderType.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FileType}" Value="ImgType">
                <Setter Property="Source" Value="Images/FileTypes/ImgType.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FileType}" Value="MixFileType">
                <Setter Property="Source" Value="Images/FileTypes/MixFileType.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FileType}" Value="MusicType">
                <Setter Property="Source" Value="Images/FileTypes/MusicType.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FileType}" Value="OtherType">
                <Setter Property="Source" Value="Images/FileTypes/OtherType.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FileType}" Value="PdfType">
                <Setter Property="Source" Value="Images/FileTypes/PdfType.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FileType}" Value="PptType">
                <Setter Property="Source" Value="Images/FileTypes/PptType.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FileType}" Value="RarType">
                <Setter Property="Source" Value="Images/FileTypes/RarType.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FileType}" Value="TorrentType">
                <Setter Property="Source" Value="Images/FileTypes/TorrentType.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FileType}" Value="TxtType">
                <Setter Property="Source" Value="Images/FileTypes/TxtType.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FileType}" Value="VideoType">
                <Setter Property="Source" Value="Images/FileTypes/VideoType.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding FileType}" Value="XlsType">
                <Setter Property="Source" Value="Images/FileTypes/XlsType.png"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background"  Value="{StaticResource AccentColorBrush}"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background"  Value="{StaticResource AccentColorBrush}"/>
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Opacity="0.6" Color="{DynamicResource AccentColor}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background"  Value="#55FFFFFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource MetroTextBox}">
        <Setter Property="Background" Value="#90FFFFFF"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource AccentColorBrush}"/>
    </Style>

    <Style TargetType="PasswordBox" BasedOn="{StaticResource MetroPasswordBox}">
        <Setter Property="Background"  Value="#90FFFFFF"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource AccentColorBrush}"/>
    </Style>

    <Style TargetType="{x:Type mui:ModernButton}" BasedOn="{StaticResource {x:Type mui:ModernButton}}">
        <Setter Property="EllipseDiameter" Value="26"/>
        <Setter Property="EllipseStrokeThickness" Value="0.8"/>
    </Style>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource SelectedBackgroundStyle}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#30FFFFFF"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
